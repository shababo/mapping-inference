function h_pf=plotting_spike_and_slab(f_str)
% PLOTTING_SPIKE_AND_SLAB plotting functions for script_spike_and_slab

if strcmp(f_str,'plot_gibbs_samples')
    h_pf=@plot_gibbs_samples;
elseif strcmp(f_str,'plot_weights_reconstruction')
    h_pf=@plot_weights_reconstruction;
elseif strcmp(f_str,'plot_average_sparsity_vector')
    h_pf=@plot_average_sparsity_vector;
elseif strcmp(f_str,'plot_quartiles')
    h_pf=@plot_quartiles;
elseif strcmp(f_str,'plot_sample_autocorrelation_function')
    h_pf=@plot_sample_autocorrelation_function;
else
    save('error')
    error(['plotting_spike_and_slab: requested function ' f_str ' does not exist'])
end

end


function plot_quartiles(Qs,W)
% PLOT_QUARTILES plots the quartiles of the sample distribution of W.

fig_params=initialize_fig_params();
set(0,'defaultaxesfontname','cmu serif')
h_fig=figure('name','Quartiles','numbertitle','off'); clf
prepare_plot(h_fig,16,10);
h_ax_1=axes; hold on
set(h_ax_1,'fontsize',16)
ind=find(W~=0);
plot(ind,W(ind),'ro','markersize',15,'displayname','$W$')
errorbar(1:size(Qs,1),Qs(:,2),Qs(:,2)-Qs(:,1),Qs(:,3)-Qs(:,2),'k+','markersize',20,'linestyle','none','displayname','$\hat{W}$')
hline(0,'k--')
h_title=title('Spike-and-slab estimate: quartiles of Rao-Blackwell empirical $W$ marginal densities');
set(h_title,'fontsize',16)
xlabel('Element $i$','fontsize',fig_params(1).label_font_size)
ylabel('$W_i$','fontsize',fig_params(1).label_font_size)
h_leg=legend('show');
set(h_leg,'fontsize',fig_params(1).legend_font_size);
set(h_leg,'interpreter','latex')
% axis([0 size(Qs,1)+1 0 1])

end


function plot_average_sparsity_vector(Sgt)
% PLOT_AVERAGE_SPARSITY_VECTOR plots the average of the sparsity vectors
% drawn during the Gibbs sampler.

fig_params=initialize_fig_params();
set(0,'defaultaxesfontname','cmu serif')
h_fig=figure('name','Average sparsity vector','numbertitle','off');
prepare_plot(h_fig,16,10);
clf;
h_ax_1=axes;
set(h_ax_1,'fontsize',fig_params(1).axis_font_size)
hold on
ind=(1:length(Sgt));
ind=ind(Sgt~=0);
stem(ind,Sgt(Sgt~=0),'k','linewidth',1.5,'marker','none','displayname','Average S')
h_title=title('Average sample $S$');
set(h_title,'fontsize',fig_params(1).title_font_size)
xlabel('Element $i$','fontsize',fig_params(1).label_font_size)
ylabel('Average sparsity $s_i$','fontsize',fig_params(1).label_font_size)
h_leg=legend('show');
set(h_leg,'fontsize',fig_params(1).legend_font_size);
axis([0 length(Sgt)+1 0 1])

end


function plot_gibbs_samples(W,Wgs,Y,g)
% PLOT_GIBBS_SAMPLES plots the sparse samples from the spike and slab model
% generated by Gibbs sampling. Plots the sample against the true weights
% vector. The observation is also shown.

fig_params=initialize_fig_params();
set(0,'defaultaxesfontname','cmu serif')
h_fig=figure('name','Gibbs samples','numbertitle','off'); clf
prepare_plot(h_fig,16,10);
h_ax_1=axes;
set(h_ax_1,'fontsize',fig_params(1).axis_font_size)
hold on
ind=(1:length(W));
ind=ind(W~=0);
stem(ind,W(ind),'k','linewidth',1.5,'marker','none','displayname','True W')
ind=find(Wgs(:,max(1,g))~=0);
stem(ind,Wgs(ind,max(1,g)),'rx','linewidth',1,'displayname','Sampled W')
% plot(Y,'k--','displayname','Observation Y')
if g>0
    W_med=median(Wgs(:,1:g)')';
    ind=find(W_med~=0);
    plot(ind,W_med(ind),'ro','markersize',10,'linestyle','none','displayname','Median of W samples')
end
h_title=title(['Sample W from sweep number ' num2str(g)]);
set(h_title,'fontsize',fig_params(1).title_font_size)
xlabel('Element $i$','fontsize',fig_params(1).label_font_size)
ylabel('Sampled weight $w_i$','fontsize',fig_params(1).label_font_size)
h_leg=legend('show');
set(h_leg,'fontsize',fig_params(1).legend_font_size);
axis([0 length(W)+1 -1.2*max(abs(W)) 1.2*max(abs(W))])

end


function plot_weights_reconstruction(W,Wgt,Wgtv,identifier,timestamp)
% PLOT_WEIGHTS_RECONSTRUCTION plot MSE with respect to amount of overlap

fig_params=initialize_fig_params();
h_fig=figure('name','Weights reconstruction','numbertitle','off'); clf
prepare_plot(h_fig,13,8);
h_ax_1=axes;
hold on
plot(W,'k','linewidth',1.5,'linestyle','--','displayname','$W$')
errorbar(Wgt,2*Wgtv,'k','displayname','$\hat{W}$')
h_leg=legend('show');
set(h_leg,'interpreter','latex')
set(h_ax_1,'fontsize',fig_params(1).axis_font_size)
% xlim([-0.1 max(x)+0.1])
h_lab_x=xlabel('Element $i$','interpreter','latex','fontsize',fig_params(1).label_font_size);
h_lab_y=ylabel('Weight $w_i$','interpreter','latex','fontsize',fig_params(1).label_font_size);
% pos_lab_y=get(h_lab_y,'position');
% set(h_lab_y,'position',pos_lab_y+[0 0 0])
% pos_lab_x=get(h_lab_x,'position');
% set(h_lab_x,'position',pos_lab_x+[0 -0.002 0])
% set(h_ax_1,'xtick',x(end:-1:1))
latex_ticks(h_ax_1);
% h_leg=legend('show');
set(h_leg,'units','inches')
set(h_leg,'location','best')
% pos1=get(h_leg,'position')
% set(h_leg,'position',[pos1(1) pos1(2) pos1(3) pos1(4)])
set(h_leg,'fontsize',fig_params(1).legend_font_size);
set(h_leg,'interpreter','latex')
print(h_fig_1,'-dpdf',['~/research/dendritic_synaptic_connectivity/matlab/figures/spike_and_slab/weights_reconstruction/' identifier '_' timestamp '.pdf']);

end


function plot_sample_autocorrelation_function(Wgs)

fig_params=initialize_fig_params();
set(0,'defaultaxesfontname','cmu serif')
h_fig=figure('name','Sample autocorrelation function','numbertitle','off'); clf
prepare_plot(h_fig,16,10);
h_ax_1=axes;
set(h_ax_1,'fontsize',14)
nG=size(Wgs,2);
plot(-nG+1:nG-1,xcorr(Wgs(6,:)-mean(Wgs(6,:)),'unbiased'))
hline(0);
h_title=title('Autocorrelation function of Gibbs samples');
set(h_title,'fontsize',fig_params(1).title_font_size)
xlabel('Lag $n$','fontsize',fig_params(1).label_font_size)
ylabel(['$E[w_{i,n}$' ' $w_{i,n+m}$' ' $]$'],'fontsize',fig_params(1).label_font_size)

end


function prepare_plot(h_fig,width,height)
% PREPARE_PLOT prints the current plot to a pdf file

if nargin<2 width=10; end
if nargin<3 height=6; end
orient portrait
set(h_fig,'units','inches')
set(h_fig,'outerposition',[0 0 width height])
set(h_fig,'paperpositionmode','auto');
p=get(h_fig,'position');
set(h_fig,'PaperSize',[p(3) p(4)]);

end


function fig_params=initialize_fig_params()
% FIG_PARAMS sets default values for figure parameters such as font sizes

fig_params=struct('axis_font_size',12,'label_font_size',18, ...
    'title_font_size',20,'colors',{'k','r','g','b'}, ...
    'legend_font_size',16);

end


function latex_ticks(h_ax)
% LATEX_TICKS make tick labels LaTeX

xs_old=get(h_ax,'xtick');
xs_new={};
h_lab_x=get(h_ax,'xlabel');
pos_x=get(h_lab_x,'position');
for (j=1:length(xs_old)) xs_new{j}=['$' num2str(xs_old(j)) '$']; end
ys_old=get(h_ax,'ytick');
ys_new={};
h_lab_y=get(h_ax,'ylabel');
pos_y=get(h_lab_y,'position');
for (j=1:length(ys_old)) ys_new{j}=['$' num2str(ys_old(j)) '$']; end
format_ticks(h_ax,xs_new,ys_new);
set(h_lab_x,'position',pos_x)
set(h_lab_y,'position',pos_y)

end

